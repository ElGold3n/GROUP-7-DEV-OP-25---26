# GitHub Actions Workflow for DevOps Group 7
# This workflow builds the Java application, creates Docker images,
# and runs the complete application stack for testing.
name: A workflow for DevOps Group 7

# Trigger: Runs on every push to any branch.
on: push

jobs:
  build:
    name: devopsGroup Actions

    # Use Ubuntu 22.04 LTS for stability
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Check out the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up Java Development Kit
      # Java 17 is ultimately required for this project's dependencies and features
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt' # Using AdoptOpenJDK distribution.

      # Step 3: Build the application using Maven, including coverage
      # NOTE: Your pom.xml must be configured to use the JaCoCo plugin
      # to generate a report (e.g., target/site/jacoco/jacoco.xml) during this phase.
      - name: Build with Maven and Generate Coverage
        run: mvn -B clean verify jacoco:report --file pom.xml

      # Step 4: Upload coverage reports to Codecov
      # This step automatically looks for standard JaCoCo XML reports.
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          #CODECOV_TOKEN
          # token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml  # Default JaCoCo report location
          fail_ci_if_error: true # Recommended: fail the CI if the upload fails

      # Step 5: Build the Docker image for the webapp
      # This creates a containerized version of the application
      - name: Build webapp container
        run: docker build -t webapp:latest .

      # Step 6: Run the complete application stack
      # --abort-on-container-exit ensures the workflow fails if any container crashes
      # --build rebuilds images if necessary
      - name: Run docker compose
        run: docker compose up --abort-on-container-exit --build
